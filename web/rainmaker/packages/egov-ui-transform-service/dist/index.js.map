{"version":3,"sources":["../src/index.js"],"names":["require","config","app","server","http","createServer","use","exposedHeaders","corsHeaders","bodyParser","json","limit","bodyLimit","console","log","process","env","NODE_ENV","Test","db","listen","PORT","port","address"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;AACAA,QAAQ,QAAR,EAAkBC,MAAlB;;AAEA,IAAIC,MAAM,wBAAV;AACAA,IAAIC,MAAJ,GAAaC,eAAKC,YAAL,CAAkBH,GAAlB,CAAb;;AAEA;AACAA,IAAII,GAAJ,CAAQ,sBAAO,KAAP,CAAR;;AAEA;AACAJ,IAAII,GAAJ,CACE,oBAAK;AACHC,kBAAgBN,iBAAOO;AADpB,CAAL,CADF;;AAMAN,IAAII,GAAJ,CACEG,qBAAWC,IAAX,CAAgB;AACdC,SAAOV,iBAAOW;AADA,CAAhB,CADF;;AAMAC,QAAQC,GAAR,CAAYC,QAAQC,GAAR,CAAYC,QAAxB;;AAEAJ,QAAQC,GAAR,CAAYC,QAAQC,GAAR,CAAYE,IAAxB;;AAGA;AACA,kBAAa,cAAM;AACjB;AACAhB,MAAII,GAAJ,CAAQ,0BAAW,EAAEL,wBAAF,EAAUkB,MAAV,EAAX,CAAR;;AAEA;AACAjB,MAAII,GAAJ,CAAQ,GAAR,EAAa,mBAAI,EAAEL,wBAAF,EAAUkB,MAAV,EAAJ,CAAb;;AAGAjB,MAAIC,MAAJ,CAAWiB,MAAX,CAAkBL,QAAQC,GAAR,CAAYK,IAAZ,IAAoBpB,iBAAOqB,IAA7C,EAAmD,YAAM;AACvDT,YAAQC,GAAR,sBAA+BZ,IAAIC,MAAJ,CAAWoB,OAAX,GAAqBD,IAApD;AACD,GAFD;AAGD,CAXD;;kBAaepB,G","file":"index.js","sourcesContent":["import http from \"http\";\nimport express from \"express\";\nimport cors from \"cors\";\nimport morgan from \"morgan\";\nimport bodyParser from \"body-parser\";\nimport initializeDb from \"./db\";\nimport middleware from \"./middleware\";\nimport api from \"./api\";\nimport config from \"./config.json\";\n\n//loading env property\nrequire(\"dotenv\").config();\n\nlet app = express();\napp.server = http.createServer(app);\n\n// logger\napp.use(morgan(\"dev\"));\n\n// 3rd party middleware\napp.use(\n  cors({\n    exposedHeaders: config.corsHeaders\n  })\n);\n\napp.use(\n  bodyParser.json({\n    limit: config.bodyLimit\n  })\n);\n\nconsole.log(process.env.NODE_ENV);\n\nconsole.log(process.env.Test);\n\n\n// connect to db\ninitializeDb(db => {\n  // internal middleware\n  app.use(middleware({ config, db }));\n\n  // api router\n  app.use(\"/\", api({ config, db }));\n\n\n  app.server.listen(process.env.PORT || config.port, () => {\n    console.log(`Started on port ${app.server.address().port}`);\n  });\n});\n\nexport default app;\n"]}